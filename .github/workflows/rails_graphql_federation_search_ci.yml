name: rails_graphql_federation search CI

on:
  pull_request:
  push:
    branches: [ main ]
    paths: [ rails_graphql_federation/search/** ]
  workflow_dispatch:

env:
  rails_app_root: rails_graphql_federation/search
  CI: true

defaults:
  run:
    working-directory: rails_graphql_federation/search

jobs:
  scan_ruby:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          working-directory: ${{ env.rails_app_root }}
          bundler-cache: true

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: ./bin/brakeman --no-pager

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          working-directory: ${{ env.rails_app_root }}
          bundler-cache: true

      - name: Lint code for consistent style
        run: ./bin/rubocop -f github

  rspec:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    services:
      kafka:
        image: apache/kafka:latest
        env:
          KAFKA_NODE_ID: 1
          KAFKA_PROCESS_ROLES: broker,controller
          KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://127.0.0.1:9092
          KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
          KAFKA_CONTROLLER_QUORUM_VOTERS: 1@127.0.0.1:9093
          KAFKA_OFFSETS_TOPIC_NUM_PARTITIONS: 1
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
          KAFKA_TRANSACTION_STATE_LOG_NUM_PARTITIONS: 1
          KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
          KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
          KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
          KAFKA_NUM_PARTITIONS: 4
          KAFKA_LOG_RETENTION_HOURS: -1
        ports:
          - "9092:9092"

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          working-directory: ${{ env.rails_app_root }}
          bundler-cache: true

      - name: Run RSpec
        run: ./bin/rspec --format json --out tmp/rspec_results.json --format progress

      - name: Generate RSpec report
        uses: SonicGarden/rspec-report-action@v5
        with:
          json-path: ${{ env.rails_app_root }}/tmp/rspec_results.json
        if: always()
