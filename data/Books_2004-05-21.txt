name: Software_Craftsmanship
isbn13: 9780201733860
isbn: 0201733862
title: [[http://amzn.com/0201733862][Software Craftsmanship]]
author: Pete McBreen
publisher: Addison Wesley
year: 2001
start: 2004-05-21
stop: 2004-06-04

The premise looks tempting, that software engineering should be
driven like a craft, where masters lovingly guide and mold their
apprentices, passing on their hard-earned experience, relying on
their reputation for quality to drive business.  It sure looks nice
and romantic, viewed from here.  But how realistic is it, really?
How much of it is just blindly idealizing of the past?

The author points out that software development needs to
cultivate a constant state of learning, where practitioners can
continually better themselves.  We must also take pride in our work
and receive rewards commensurate with our abilities.  If a star
developer is ten times as productive as an average one, shouldn't
their compensation plan reflect that too?  The author suggests
a craftsmanship model, complete with apprentices, journeymen, and
master craftsmen as the way to get there.  While the goal is noble,
I'm not fully convinced that the path he chose is really the one to
follow.

This book has a lot of thought provoking ideas and everyone who
considers making a career developing software should read it.  I
once heard someone saying that everyone should read Kent Beck's
book on eXtreme Programming, even if they don't agree with XP.  It
is a quick read and filled with very sound advice, regardless of
whether or not you practice XP (e.g., test-driven development,
refactoring, continuous integration).  This book is like that.
Even with a development philosophy aligned with SEI's CMM, your
experts should still do presentations or publish articles to spread
their knowledge and your developers should be given opportunities
to develop their skills further.
